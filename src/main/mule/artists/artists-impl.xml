<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sps-logger="http://www.mulesoft.org/schema/mule/sps-logger" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sps-logger http://www.mulesoft.org/schema/mule/sps-logger/current/mule-sps-logger.xsd">
	<sub-flow name="impl-get-artists" doc:id="2b2d7a76-722e-4591-9308-e0b9c9ca9050" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="32e5bb65-d2f9-41c6-9ecf-6d88315dbbc6" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-get-artists::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" eventName="START"/>
		<flow-ref doc:name="sr-build-query-param-list" doc:id="eab79c87-261e-49e1-8676-c5e9605ff0a7" name="sr-build-query-param-list" target="queryParamList"/>
		<sps-logger:sps-logger doc:name="Select Artists" doc:id="58a4d6de-1a5e-4852-974f-0a4d7cb9fc29" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-get-artists::payload: '  ++ write(payload, 'application/json')]" category="${logcat}"/>
		<flow-ref doc:name="sr-select-artists" doc:id="9d76d482-808d-4874-ad47-ed19449cc86e" name="sr-select-artists" />
		<sps-logger:sps-logger doc:name="INFO END" doc:id="baf48417-b9bf-4681-b365-7828e4086c0d" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-get-artists::END::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-select-artists" doc:id="fa751186-58ae-4754-a651-5580314fe25c">
		<sps-logger:sps-logger doc:name="INFO START" doc:id="7b5ccac6-d12d-4a8f-b697-7bdbd0083b72" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-select-artists::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
		<set-variable value="#[%dw 2.0&#10;   output application/java&#10;---&#10;(&quot;1=1&quot; &#10;    ++ (if(vars.queryParamList.lastName != null) &quot; AND lower(LAST_NM) LIKE concat(lower(:lastName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.firstName != null) &quot; AND lower(FIRST_NM) LIKE concat(lower(:firstName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.groupName != null) &quot; AND lower(GROUP_NM) LIKE concat(lower(:groupName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.dateOfBirth != null) &quot; AND BIRTH_DATE = :dateOfBirth&quot; else &quot;&quot;)&#10;) as String]" doc:name="whereClause" doc:id="6022988f-8f32-43ce-a94f-6c13f26212d1" variableName="whereClause"/>
		<sps-logger:sps-logger doc:name="Where Clause" doc:id="44595e8c-2549-4014-a9e8-c48f70cde008" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-select-artists::VAR::whereClause: ' ++ write(vars.whereClause,'application/json')]" category="${logcat}"/>
		<db:select doc:name="SELECT artist" doc:id="469815ae-ede0-4c4e-b6ea-aceaa2799de5" config-ref="mysql-config">
			<db:sql><![CDATA[#["SELECT ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, BIRTH_DATE, MI, DEATH_DATE 	
    FROM BC_ARTIST 
	  WHERE $(vars.whereClause)"]
]]></db:sql>
			<db:input-parameters><![CDATA[#[vars.queryParamList]]]></db:input-parameters>
		</db:select>
		<sps-logger:sps-logger doc:name="Select Artist" doc:id="1c5db17f-28dd-46cb-8d3d-8f712ce9bb80" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-select-artists::Select::payload: ' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
		<ee:transform doc:name="payload" doc:id="9b6ac348-302c-4155-a925-3318beb782c2">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
		statusCode: p('http.get.status.ok'),
		message: p('http.get.message.ok'),
		searchCriteria: ("[" 
		++ (if(vars.queryParamList.lastName != null) "lastName: '$(vars.queryParamList.lastName)', " else "")
++ (if(vars.queryParamList.firstName != null) "firstName: '$(vars.queryParamList.firstName)', " else "")
++ (if(vars.queryParamList.groupName != null) "groupName: '$(vars.queryParamList.groupName)', " else "")
++ (if(vars.queryParamList.dateOfBirth != null) "birthDate: '$(vars.queryParamList.dateOfBirth)', " else "")
    	++ "]"	),
	
		artists: payload map ( artist ) -> {
		artistId: artist.ARTIST_ID default 0,
		groupName: artist.GROUP_NM default "",
		lastName: artist.LAST_NM default "",
		firstName: artist.FIRST_NM default "",
		mi: artist.MI default "",
		dateOfBirth: artist.BIRTH_DATE as String {format: "yyyy-MM-dd"} default "",
		(if (artist.DEATH_DATE != null) (dateOfDeath: artist.DEATH_DATE as String {format: "yyyy-MM-dd"}) else dateOfDeath: "")
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="5140984a-f8b0-4ae8-9e7a-624794827e8e" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-select-artists::END::payload: ' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-build-query-param-list" doc:id="2a79545f-4036-4a94-b34d-398e04747ac4" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="3578fdfd-3740-488a-a41d-46ee60b3382b" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-build-query-param-list::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" config-ref="SPS_Logger_Config"/>
		<ee:transform doc:name="queryParams" doc:id="ca580a67-dc5c-46ea-9783-69ec770de534" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	firstName: attributes.queryParams.firstName,
	lastName: attributes.queryParams.lastName,
	dateOfBirth: attributes.queryParams.dateOfBirth,
	groupName: attributes.queryParams.groupName
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="9f0f023b-6316-45d1-9dd6-49d23bdb8a51" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-build-query-param-list::END::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-find-duplicate-artist" doc:id="bc77e3f8-a342-45ca-86c2-72b89046d362" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="45230078-63e8-430a-8fcf-959316526618" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-find-duplicate-artist::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;var artist = payload.artist&#10;---&#10;{&#10;    groupName: 	artist.groupName,&#10;    firstName: 	artist.firstName,&#10;    lastName:     artist.lastName,&#10;    dateOfBirth:  artist.dateOfBirth&#10;  }]" doc:name="queryParamList" doc:id="20b5cc39-fd3c-4ef0-b399-1fbe72877b86" variableName="queryParamList"/>
		<sps-logger:sps-logger doc:name="queryParamList" doc:id="8b3fc91d-9ae7-4e16-a02d-d929a966d566" config-ref="SPS_Logger_Config" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-find-duplicate-artist::VAR::queryParamList:'  ++ write(vars.queryParamList, 'application/json')]" category="${logcat}"/>
		<flow-ref doc:name="sr-select-artists" doc:id="d15b7d39-a4b8-4b28-a2db-3a2958970527" name="sr-select-artists"/>
		<sps-logger:sps-logger doc:name="INFO sizeOf" doc:id="36bdfc63-d2e6-4408-90e3-d1cb015c9994" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-find-duplicate-artist::SizeOfPayload: '  ++ sizeOf(payload.artists)]" category="${logcat}"/>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="d771de38-a813-4a65-9a16-ac3c0eb2c3ef" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-find-duplicate-artist::END::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="impl-add-artists" doc:id="e9774feb-d5e4-4e12-95fa-5de313bd926c" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="a9213f96-8326-46e7-a74a-6d0a17488c97" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
		<ee:transform doc:name="artists, artistsOut, artistsFound" doc:id="2e6f225d-b6ea-43be-8408-a346d6df6a0f" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="artistsOut" ><![CDATA[output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artistsFound" ><![CDATA[output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artists" ><![CDATA[output application/json
---
payload.artists]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<sps-logger:sps-logger doc:name="Artist" doc:id="34a5ea4d-6fe6-40bc-95b0-c704a8c8c914" config-ref="SPS_Logger_Config" eventName="BEFORE TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEach::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
		<foreach doc:name="For Each Artist" doc:id="f344cffe-d747-4f69-b1b1-cfb84ee211b2" collection="#[vars.artists]">
			<sps-logger:sps-logger doc:name="Artist" doc:id="7ceea116-ba96-433c-aa85-531b573ab90d" config-ref="SPS_Logger_Config" eventName="BEFORE TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEach::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
			<set-payload value='#[output application/json&#10;---&#10;{&#10;	artist: {&#10;		artistId: payload.artistId,&#10;		groupName: payload.groupName,&#10;		lastName: payload.lastName,&#10;		firstName: payload.firstName,&#10;		mi: payload.mi,&#10;		dateOfBirth: payload.dateOfBirth,&#10;		dateOfDeath: payload.dateOfDeath&#10;	}&#10;}]' doc:name="artist" doc:id="e6aecf85-8168-4cf4-a111-b04d0c6303bc" />
			<sps-logger:sps-logger doc:name="Modified Artist" doc:id="6db0c6d0-47ce-4663-8912-a31f1f96f181" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" level="DEBUG" correlationId="#['impl-add-artists::ForEach::Artist:'  ++ write(payload, 'application/json')]" category="${logcat}" />
			<flow-ref doc:name="sr-find-duplicate-artist" doc:id="f76d65e3-c827-4a9a-9c9e-4613921c1190" name="sr-find-duplicate-artist" target="getArtistResponse"/>
			<sps-logger:sps-logger doc:name="Modified Artist" doc:id="ec94bc84-dbf3-48a8-a045-8e8607e0d1b6" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEach::Artist:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
			<choice doc:name="Artist Found?" doc:id="8867ddf3-ce41-4090-80a5-19a96c49bc65" >
				<when expression="#[vars.getArtistResponse.artists[0]==null]">
					<sps-logger:sps-logger doc:name="Modified Artist" doc:id="cd70b968-8449-4391-87cf-67fc5136d31f" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEachChoice::Artist:'  ++ write(payload, 'application/json')]" category="${logcat}" />
					<flow-ref doc:name="sr-insert-artist" doc:id="583e642e-2a1a-4bc7-967c-7060e694a504" name="sr-insert-artist" target="newArtist" />
					<sps-logger:sps-logger doc:name="Insert Artist" doc:id="346f7788-a9c4-4e16-915b-614198e27e7f" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEachChoice::Artist:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
					<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.artistsOut + vars.newArtist]" doc:name="append artistsOut" doc:id="26404c0f-3b9e-44dd-a324-555fa17fd74c" variableName="artistsOut" />
					<sps-logger:sps-logger doc:name="artistOut" doc:id="59811c2a-670b-401d-825e-3acfaa07c4e1" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEachChoice::Artist:'  ++ write(vars.artistsOut, 'application/json')]" category="${logcat}"/>
				</when>
				<otherwise >
					<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;	vars.artistsFound + vars.getArtistResponse.artists[0]]" doc:name="append artistsFound" doc:id="5082ee0e-8f67-4724-8997-d5db58189d14" variableName="artistsFound"/>
					<sps-logger:sps-logger doc:name="artistFound" doc:id="1a030718-47c5-48cf-a72b-2eeaba7cfd2d" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEachChoice::Artist:'  ++ write(vars.artistsFound, 'application/json')]" category="${logcat}"/>
				</otherwise>
			</choice>
		</foreach>
		<ee:transform doc:name="add response" doc:id="8d37b396-7d2c-449e-ab3d-54d89598512b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
"statusCode": if (sizeOf(vars.artistsFound) > 0) p('http.add.status.partial') else p('http.add.status.ok'),
"message":  if (sizeOf(vars.artistsFound) > 0) p('http.add.message.partial') else p('http.add.message.ok'),
    	results: {
		addedCounts: if (vars.artistsOut[0]==null) "0" else sizeOf(vars.artistsOut), 
		addedArtists: if (vars.artistsOut[0]==null) "[]" else vars.artistsOut, 
	duplicatedCounts: if (vars.artistsFound[0]==null) "0" else sizeOf(vars.artistsFound), 
		duplicatedArtists: if (vars.artistsFound[0]==null) "[]" else vars.artistsFound, 
	}
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="47db6cd2-3eb5-476a-b850-1358a84ed62f" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::END::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-insert-artist" doc:id="ca170e47-3a3b-42b2-ba42-41b08ea873f1" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="b9649f17-1d34-402f-8bc9-f81df5655581" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" />
		<set-variable value="#[payload.artist]" doc:name="incomingArtist" doc:id="e1e6a676-7cea-47af-907d-9e5b3d514897" variableName="incomingArtist"/>
		<try doc:name="Try" doc:id="45149d1e-64e6-4728-8f96-bf18e6dd1429" >
			<sps-logger:sps-logger doc:name="Incoming Artist" doc:id="7dcdbd28-2446-4aa0-9e34-2b0ab621642e" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::incomingArtist:'  ++ write(vars.incomingArtist, 'application/json')]" category="${logcat}"/>
			<db:insert doc:name="Insert Artist" doc:id="55b43aa2-ecaa-4771-be17-43c1a147922c" config-ref="mysql-config">
			<db:sql><![CDATA[INSERT INTO BC_MUSIC_FACTORY.bc_artist 
         (ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, MI, BIRTH_DATE, DEATH_DATE, STATUS_CD) 
         VALUES (NULL, :groupName, :firstName, :lastName, :mi, :birthDate, :deathDate, "CA")]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    mi: 	  	vars.incomingArtist.mi,
    birthDate: 	vars.incomingArtist.dateOfBirth,
    deathDate: 	vars.incomingArtist.dateOfDeath
}]]]></db:input-parameters>
		</db:insert>
			<sps-logger:sps-logger doc:name="Artist" doc:id="bfd68105-efed-4bab-8d32-6f3f7c5b5d72" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::Artist:' ++ write(payload, 'application/json')]" category="${logcat}"/>
			<db:select doc:name="Select Insert" doc:id="e2e68d97-f15e-4ece-8678-a965a376dc3b" config-ref="mysql-config" target="newArtistId">
			<db:sql><![CDATA[SELECT MAX(artist_id) AS artist_id from BC_MUSIC_FACTORY.bc_artist
    WHERE GROUP_NM = :groupName 
          AND BIRTH_DATE = :birthDate 
          AND FIRST_NM = :firstName
          AND LAST_NM = :lastName
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    birthDate: 	vars.incomingArtist.dateOfBirth
}]]]></db:input-parameters>
		</db:select>
			<sps-logger:sps-logger doc:name="Select Insert" doc:id="793790d3-b8af-492c-b5fb-b14efecb2ac7" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::Artist:' ++ write(payload, 'application/json')]" category="${logcat}"/>
			<sps-logger:sps-logger doc:name="Update Payload" doc:id="a57d88ef-b469-4879-862d-f81dbd92cdd8" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::Artist:' ++ write(payload, 'application/json')]" category="${logcat}"/>
			<set-payload value="#[output application/java&#10;var artist = vars.incomingArtist&#10;var newArtistId = vars.newArtistId[0].artist_id default 0&#10;---&#10;{&#10;	artistId: 	newArtistId,&#10;	groupName: 	artist.groupName,&#10;	lastName: 	artist.lastName,&#10;	firstName: 	artist.firstName,&#10;	mi:       	artist.mi,&#10;	dateOfBirth: 	artist.dateOfBirth,&#10;	dateOfDeath:	artist.dateOfDeath&#10;}]" doc:name="Update Payload" doc:id="fef63dc5-ceff-4cc2-8148-4ba9ff98a228" />
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="ba84dc44-94c1-4499-be62-655e76f5e8da" type="DB:QUERY_EXECUTION">
					<sps-logger:sps-logger doc:name="Error" doc:id="25dfa301-6545-4f0c-884b-15ba093a98d2" config-ref="SPS_Logger_Config" eventName="EXCEPTION" level="ERROR" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::OnErrorPropagate:' ++ write(payload, 'application/json')]" category="${logcat}"/>
				</on-error-propagate>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="42686345-016f-4da2-bb76-986ccf1a3b38" type="EXPRESSION">
					<sps-logger:sps-logger doc:name="Error" doc:id="bfe4f965-8dd2-4bb8-a362-31c1a6ab371f" config-ref="SPS_Logger_Config" eventName="EXCEPTION" level="ERROR" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::OnErrorContinue:' ++ write(payload, 'application/json')]" category="${logcat}"/>
				</on-error-continue>
			</error-handler>
		</try>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="98f3e36a-9248-4502-8b0c-90841200b41f" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artists::END::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="impl-update-artist-urls" doc:id="5f03aa97-f4d6-41fc-9721-96d15a7c153e" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="88338534-1deb-4fe5-8ca7-fc03fcb79fc5" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" />
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;{&#10;	method: p('last.fm.method'),&#10;	apiKey: p('last.fm.api.key'),&#10;	format: p('last.fm.format'),&#10;	artist: payload.groupName&#10;}]" doc:name="lastFmProperties" doc:id="de63d40d-dd63-4f70-8088-2596eb698f18" variableName="lastFmProperties"/>
		<sps-logger:sps-logger doc:name="lastFmProperties" doc:id="1b065979-ad81-4e9e-b3aa-e3764752c9a8" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Var::lastFmProperties:' ++ write(vars.lastFmProperties, 'application/json')]" category="${logcat}"/>
		<flow-ref doc:name="sr-get-artist-info" doc:id="842acf3d-2eb5-4282-8d45-413f4cf5cf31" name="sr-get-artist-info" target="lastFmResponse"/>
		<sps-logger:sps-logger doc:name="Artist Info" doc:id="90a4fd13-2dea-4d3f-9ba4-092e324c3e1c" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
		<choice doc:name="Artist Found?" doc:id="7dedc337-47e4-4bd6-95f0-8008a0f51064" >
			<when expression='#[vars.lastFmResponse.statusCode=="201"]'>
				<sps-logger:sps-logger doc:name="Artist" doc:id="30ab40cb-865c-4c71-a030-250e31ada418" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Choice::payload:' ++ write(payload, 'application/json')]" category="${logcat}" />
				<flow-ref doc:name="sr-patch-artist" doc:id="0cc7f246-7489-480b-846a-6bfcea82d086" name="sr-patch-artist"/>
				<sps-logger:sps-logger doc:name="Patch Artist" doc:id="55687d25-60cc-488e-ae83-0923b961b232" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Choice::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
			</when>
			<otherwise >
				<sps-logger:sps-logger doc:name="Artist" doc:id="531780f4-bfd6-4ad6-909f-aaf2eb1ed1c3" config-ref="SPS_Logger_Config" eventName="BEFORE TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Choice::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
				<ee:transform doc:name="NOT FOUND response" doc:id="3d405d19-ffed-460e-b9b9-99a404d96ae6" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.lastFmResponse
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<sps-logger:sps-logger doc:name="Not Found" doc:id="331fdbee-305f-4182-a532-1d492c270438" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Choice::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
			</otherwise>
		</choice>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="7b007db0-3d84-407b-b5de-96e805cefc0b" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::END::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="sr-get-artist-info" doc:id="5e19f688-292d-4c96-8793-44774dc04938">
		<sps-logger:sps-logger doc:name="INFO START" doc:id="07245c10-ec27-437d-ade7-3aaf2f041d2c" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-get-artist-info::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" />
		<http:request method="GET" doc:name="Get Artist Bio" doc:id="2e587f2a-1dfd-46f3-85e5-9e94885214cc" config-ref="last-fm-http-config" path="/${last.fm.version}">
			<http:query-params><![CDATA[#[{
	"method": vars.lastFmProperties.method,
	"api_key": vars.lastFmProperties.apiKey,
	"artist": vars.lastFmProperties.artist,
	"format": vars.lastFmProperties.format
}]]]></http:query-params>
		</http:request>
		<sps-logger:sps-logger doc:name="Artist Bio" doc:id="746c615c-b14b-4c93-af3e-4c01918e41d8" config-ref="SPS_Logger_Config" targetSystem="${last.fm.host}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-get-artist-info::Request::payload:' ++ write(payload, 'application/json')]" statusCode="#[if(payload.artist.bio.content==null) p('http.get.status.nf') else p('http.get.status.ok')]" category="${logcat}"/>
		<ee:transform doc:name="response" doc:id="80a1e09f-ca29-40db-8406-aa4aa0ff21fb">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var NOT_FOUND_STATUS = p('http.patch.status.nf')
var NOT_FOUND_MESSAGE = p('http.patch.message.nf')
var FOUND_STATUS = p('http.patch.status.ok')
var FOUND_MESSAGE = p('http.patch.message.ok')
---
{
	statusCode: if(payload.artist.bio.content==null) (NOT_FOUND_STATUS) else (FOUND_STATUS),
	message: if(payload.artist.bio.content==null) (NOT_FOUND_MESSAGE) else (FOUND_MESSAGE),
	bioUrl: if(payload.artist.bio.content != null) (payload.artist.bio.links.link.href)  else (NOT_FOUND_MESSAGE)
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="9a527c5d-c28c-4287-8491-564cb02af422" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-get-artist-info::END::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="sr-patch-artist" doc:id="dd2e8d1c-93e8-4eee-944d-606d1569e085" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="ad84d92e-e99b-4b4a-960a-ca38674b379a" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-patch-artist::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" />
		<set-variable value="#[vars.lastFmResponse.bioUrl]" doc:name="bioUrl" doc:id="56d4f665-3aab-4bb8-be77-760bab8de5a1" variableName="bioUrl"/>
		<sps-logger:sps-logger doc:name="bioUrl" doc:id="0bb81341-0c15-4536-b1d6-b6b14cf7efa4" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-patch-artist::Update::payload:' ++ write(vars.bioUrl, 'application/json')]" category="${logcat}"/>
		<db:update doc:name="Update artist" doc:id="338d801e-80be-4545-b520-8cfa9710c0b9" config-ref="mysql-config">
			<db:sql ><![CDATA[UPDATE BC_ARTIST
  SET bio_url = :bioUrl
  WHERE group_nm = :groupName
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bioUrl: vars.bioUrl,
	groupName: vars.lastFmProperties.artist
}]]]></db:input-parameters>
		</db:update>
		<sps-logger:sps-logger doc:name="Update Artist" doc:id="55f8db33-9504-4284-9d86-d0452a553a5b" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-patch-artist::Update::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
		<set-payload value="#[%dw 2.0&#10;output application/json&#10;var FOUND_STATUS = p('http.get.status.ok')&#10;var FOUND_MESSAGE = p('http.get.message.ok')&#10;---&#10;{&#10;	statusCode: FOUND_STATUS,&#10;	message: FOUND_MESSAGE,&#10;	bioUrl: vars.bioUrl,&#10;	recordsUpdated: payload.affectedRows&#10;}]" doc:name="Set Payload" doc:id="1067360b-3e46-421c-87f7-de1a308509dd" />
		<sps-logger:sps-logger doc:name="INFO END" doc:id="af95ee46-1a8b-4529-8c54-3d2956b684dd" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-patch-artist::END::payload:'  ++ write(payload, 'application/json')]" category="${logcat}" />
	</sub-flow>
</mule>
