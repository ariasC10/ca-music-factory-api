<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sps-logger="http://www.mulesoft.org/schema/mule/sps-logger" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/sps-logger http://www.mulesoft.org/schema/mule/sps-logger/current/mule-sps-logger.xsd">
	<sub-flow name="impl-get-catalog" doc:id="3ffaac57-3c97-42b0-b1e2-cf5385534d92" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="4a2172bd-6ca3-49f6-8e68-7dbd42b447d6" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-get-catalog::START::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
		<sps-logger:sps-logger doc:name="Group Name" doc:id="d62da44e-e3e0-4663-8f31-ff4aaa71f4ff" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-get-catalog::QUERYPARAM::groupName:'  ++ write(attributes.queryParams.groupName, 'application/json')]" category="${logcat}"/>
		<db:select doc:name="Select CATALOG" doc:id="9e80920d-01fd-4498-8329-3acfba58ce61" config-ref="mysql-config">
			<db:sql ><![CDATA[SELECT ALBUM.TITLE AS ALBUM_NM, ALBUM.PUBLICATION_DT AS ALBUM_PUBLISH,
	   SONG.SONG_TITLE, SONG.GENRE AS SONG_GENRE, SONG.DURATION AS SONG_DURATION, 
       ARTIST.GROUP_NM, ARTIST.LAST_NM AS ARTIST_LAST, ARTIST.FIRST_NM AS ARTIST_FIRST, DATE_FORMAT(ARTIST.BIRTH_DATE, "%Y-%m-%d") AS ARTIST_BIRTH, ifnull(ARTIST.DEATH_DATE,"") AS ARTIST_DEATH
	FROM BC_ALBUM ALBUM
        LEFT OUTER JOIN BC_ARTIST ARTIST 
          ON ALBUM.GROUP_NM = ARTIST.GROUP_NM
        LEFT OUTER JOIN BC_SONG SONG 
          ON SONG.ARTIST_NM = ARTIST.GROUP_NM
      WHERE ARTIST.GROUP_NM LIKE :groupName
      GROUP BY ALBUM_NM, SONG_TITLE, ARTIST_LAST	
      ORDER BY ALBUM_NM, SONG_TITLE, ARTIST_LAST]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	groupName: attributes.queryParams.groupName ++ "%"
}]]]></db:input-parameters>
		</db:select>
		<sps-logger:sps-logger doc:name="Select Catalog" doc:id="028eb0ab-820f-4082-b9f3-9f7b577d09d4" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-get-catalog::SELECT::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
		<ee:transform doc:name="payload" doc:id="4887ab1c-968b-431a-9215-cdd7493bc57b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var catalogQuery = payload
fun formatDate(d: Date) = d as String {format: "MM/dd/YYYY"}
---
{
   "albums": (catalogQuery groupBy $.ALBUM_NM mapObject(albumsGroup, agKey) ->(
       "album": {
           "albumTitle":       agKey,
           "publicationDate":  formatDate(albumsGroup.ALBUM_PUBLISH[0]),
           "groupName":        albumsGroup.GROUP_NM[0],
           "songs": (albumsGroup groupBy $.SONG_TITLE mapObject (songsGroup, sgKey) ->(
               "song": {
                   "songTitle":    sgKey,
                   "genre":        songsGroup.SONG_GENRE[0],
                   "songDuration": songsGroup.SONG_DURATION[0],
                   "songWriters": (songsGroup groupBy $.ARTIST_LAST mapObject (artistsGroup, agKey)->                                     (
                        "writer": {
                        "writer": artistsGroup.ARTIST_FIRST[0] ++ " " ++ artistsGroup.ARTIST_LAST[0],
                        "lifeDates": 
                        (if (artistsGroup.ARTIST_DEATH[0] != "")
                            ("lifeDates": formatDate(artistsGroup.ARTIST_BIRTH[0]) ++ "-" ++                                                    formatDate(artistsGroup.ARTIST_DEATH[0])) 
                        else "lifeDates":  formatDate(artistsGroup.ARTIST_BIRTH[0]))

                           }
                       )).*writer orderBy $.writer

               }
           )).*song orderBy $.songTitle

       }
  )).*album orderBy $.publicationDate
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="68c95d2a-6076-402e-a88d-96e787f73e99" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-get-catalog::END::payload:'  ++ write(payload, 'application/json')]" category="${logcat}"/>
	
</sub-flow>
</mule>
